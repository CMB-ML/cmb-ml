# For maps
px_functions: &stat_funcs
  mse:
    plot_name: "Mean Squared Error (MSE)"
    axis_name: "MSE"
    label: MSE
    func: "skimage.metrics.mean_squared_error"
  psnr:
    plot_name: "Peak Signal-to-Noise Ratio (PNSR)"
    axis_name: "PNSR"
    label: PSNR
    func: "psnr"
  rmse:
    plot_name: "Root Mean Squared Error (RMSE)"
    axis_name: "RMSE"
    label: RMSE
    func: "rmse"
  mae:
    plot_name: "Mean Absolute Error (MAE)"
    axis_name: "MAE"
    label: MAE
    func: "sklearn.metrics.mean_absolute_error"
  r2:
    plot_name: "Coefficient of Determination (R^2)"
    axis_name: "R2"
    label: R2
    func: "sklearn.metrics.r2_score"
  nrmse:
    plot_name: "Normalized Root MSE (NRMSE)"
    axis_name: "NRMSE"
    label: NRMSE
    func: "skimage.metrics.normalized_root_mse"
    kwargs: {normalization: "euclidean"}
px_operations:
  num_processes: 10

# For power spectra
mask_threshold: 0.9  # Per Planck's 2015 results:IX. Diffuse component separation: CMB maps

lmax_ratio: 3.0
beam_real:
  _target_: cmbml.utils.physics_beam.NoBeam
  _partial_: true  # lmax will come from python code

beam_cmbnncs:
  _target_: cmbml.utils.physics_beam.GaussianBeam
  _partial_: true  # lmax will come from python code
  beam_fwhm: 5

beam_pyilc:
  _target_: cmbml.utils.physics_beam.GaussianBeam
  _partial_: true  # lmax will come from python code
  beam_fwhm: 5

ps_functions: *stat_funcs
ps_operations:
  num_processes: 10
